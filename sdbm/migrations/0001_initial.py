# Generated by Django 4.2.2 on 2024-02-05 12:53

import datetime
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('other_name', models.CharField(max_length=20, null=True)),
                ('date_of_birth', models.DateField(default=datetime.date.today)),
                ('state_of_origin', models.CharField(choices=[('abia', 'Abia State'), ('adamawa', 'Adamawa State'), ('akwa_ibom', 'Akwa Ibom State'), ('anambra', 'Anambra State'), ('bauchi', 'Bauchi State'), ('bayelsa', 'Bayelsa State'), ('benue', 'Benue State'), ('borno', 'Borno State'), ('cross_river', 'Cross River State'), ('delta', 'Delta State'), ('ebonyi', 'Ebonyi State'), ('edo', 'Edo State'), ('ekiti', 'Ekiti State'), ('enugu', 'Enugu State'), ('gombe', 'Gombe State'), ('imo', 'Imo State'), ('jigawa', 'Jigawa State'), ('kaduna', 'Kaduna State'), ('kano', 'Kano State'), ('katsina', 'Katsina State'), ('kebbi', 'Kebbi State'), ('kogi', 'Kogi State'), ('kwara', 'Kwara State'), ('lagos', 'Lagos State'), ('nasarawa', 'Nasarawa State'), ('niger', 'Niger State'), ('ogun', 'Ogun State'), ('ondo', 'Ondo State'), ('osun', 'Osun State'), ('oyo', 'Oyo State'), ('plateau', 'Plateau State'), ('rivers', 'Rivers State'), ('sokoto', 'Sokoto State'), ('taraba', 'Taraba State'), ('yobe', 'Yobe State'), ('zamfara', 'Zamfara State'), ('fct', 'Federal Capital Territory')], max_length=20, verbose_name='State of Origin')),
                ('matric_no', models.CharField(max_length=20)),
                ('department', models.CharField(max_length=50)),
                ('email', models.EmailField(help_text='Student Email', max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('home_address', models.CharField(max_length=100)),
                ('emeConName', models.CharField(max_length=30, verbose_name='Emergency contact name')),
                ('emeconPhone', models.CharField(max_length=20)),
                ('guardian_name', models.CharField(max_length=50, verbose_name='Guardian Full Name')),
                ('relationship_to_student', models.CharField(max_length=20)),
                ('guardian_email', models.EmailField(help_text='Guardian Email Address', max_length=254)),
                ('guardian_phone', models.CharField(max_length=20)),
                ('guardian_add', models.CharField(max_length=50, null=True, verbose_name='Guardian Home Address')),
                ('next_of_kin_name', models.CharField(max_length=30)),
                ('relationship', models.CharField(max_length=20)),
                ('next_of_kin_email', models.EmailField(help_text='Next of Kin emaill address', max_length=254, null=True)),
                ('next_of_kin_phone', models.CharField(max_length=20, null=True)),
                ('next_of_kin_address', models.CharField(max_length=50, null=True)),
                ('medical_condition', models.CharField(choices=[('HEALTHY', 'healthy'), ('NOT HEALTHY', 'not healthy')], max_length=20, verbose_name='Medical Condition')),
                ('if_not_healthy', models.CharField(help_text='If not healthy kindly state the aligment', max_length=20, null=True)),
                ('level', models.CharField(choices=[('100', '100 Level'), ('200', '200 Level'), ('300', '300 Level'), ('400', '400 Level'), ('500', '500 Level')], max_length=20, verbose_name='Level')),
                ('enrollment_date', models.DateField(default=datetime.date.today)),
                ('graduation_date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('ACTIVE', 'active'), ('INACTIVE', 'inactive'), ('GRADUATED', 'graduated')], max_length=20, verbose_name='Student Status')),
                ('image', models.ImageField(blank=True, null=True, upload_to='qr_codes')),
            ],
        ),
    ]
